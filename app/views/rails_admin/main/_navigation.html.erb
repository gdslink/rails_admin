<%
  accordion_navigation = RailsAdmin::Config::Sections::Navigation.accordion_navigation
%>

<span id="dd" class="wrapper-dropdown" tabindex="1">
  <div class='model_name'>
    <%= @model_config.abstract_model.model.model_name.human(:count => 10) rescue I18n.t('admin.dashboard.name') %>
  </div>
  <ul class="menu dropdown">
  <%accordion_navigation[:sections].each do |section|%>
    <%      
      if section[:links] then
        section[:links].delete_if do |link|
          !link[:url_for] or !link[:url_for].include?(:model) or 
          (link[:url_for][:model] != nil && !authorized?(link[:url_for][:action], nil, link[:url_for][:model].singularize.constantize))
        end
      end
      if section[:sections] then
        section[:sections].each do |sub_section|
          sub_section[:links].delete_if do |link|
            !link[:url_for] or !link[:url_for].include?(:model) or
            (link[:url_for][:model] != nil && !authorized?(link[:url_for][:action], nil, link[:url_for][:model].singularize.constantize))
          end
        end
      end
    %>
    <%next if section[:links].length == 0 rescue nil && section[:sections].length == 0 rescue next%>
      <li data-submenu-id="<%=section[:label].delete(" ")%>_id">
          <%
             u = get_url(:dashboard, nil)
             m = section[:links][0][:url_for][:model]
             unless m.nil?
               u = get_url(:list, m) rescue nil
             end
          %>
          <%=link_to %w(Dashboard Navigators).include?(section[:label]) ? u : "#", {:class => section[:match_keys]} do%>
            <%if section[:image] then%>
                <%=image_tag section[:image] %>
            <%end%>
            <%= section[:label] %>
          <%end%>
      </li>
     <%end%>
  </ul>

  <%accordion_navigation[:sections].each do |section|%>
    <%next if %w(Dashboard Navigators).include?(section[:label])%>
    <ul id="<%=section[:label].delete(" ")%>_id" class="submenu dropdown">
    <% section[:links].each do |link| %>
      <% next if %w(Report Metric).include?(link[:url_for][:model]) && !CaseCenter::Config::Reader.get('enable_reports') %>
      <li>
        <%if link[:url_for] and link[:url_for].include?(:action) and link[:url_for].include?(:model)%>
            <%=link_to get_url(link[:url_for][:action], link[:url_for][:model]) do%>
                <%if link[:image] then%>
                    <%=image_tag link[:image]%>
                <%end%>
                <%= link[:label] %>
            <%end%>
        <%end%>
      </li>
     <%end%>
    </ul>
   <%end%>
</span>

<script>
    // jQuery-menu-aim: <meaningful part of the example>
    // Hook up events to be fired on menu row activation.
    $j(".menu").menuAim({
        activate: activateSubmenu,
        deactivate: deactivateSubmenu
    });
    // jQuery-menu-aim: </meaningful part of the example>

    // jQuery-menu-aim: the following JS is used to show and hide the submenu
    // contents. Again, this can be done in any number of ways. jQuery-menu-aim
    // doesn't care how you do this, it just fires the activate and deactivate
    // events at the right times so you know when to show and hide your submenus.
    function activateSubmenu(row) {
        var $row = $j(row),
                submenuId = $row.data("submenuId"),
                $submenu = $j("#" + submenuId),
                offset = $row.offset(),
                height = $row.outerHeight(),
                width = $row.outerWidth();

        if ($j("#" + submenuId).length > 0)
            $j(row).addClass('has-submenu');

        // Show the submenu
        $submenu.css({
            display: "block",
            top: offset.top + 5,
            left: offset.left + width - 5,  // main should overlay submenu
            height: height - 4  // padding for main dropdown's arrow
        });

        // Keep the currently activated row's highlighted look
        $row.find("a").addClass("maintainHover");
    }

    function deactivateSubmenu(row) {
        $j(row).removeClass('has-submenu');
        var $row = $j(row),
                submenuId = $row.data("submenuId"),
                $submenu = $j("#" + submenuId);

        // Hide the submenu and remove the row's highlighted look
        $submenu.css("display", "none");
        $row.find("a").removeClass("maintainHover");
    }

</script>
